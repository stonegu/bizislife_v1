<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
    xmlns:rabbit="http://www.springframework.org/schema/rabbit"
    xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
        http://www.springframework.org/schema/rabbit http://www.springframework.org/schema/rabbit/spring-rabbit-1.0.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
        ">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Enable AspectJ -->
	<aop:aspectj-autoproxy />


	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<!-- <resources mapping="/resources/**" location="/resources/" /> -->
	<resources mapping="**/*.jpg" location="/" />
	<resources mapping="**/*.png" location="/" />
	<resources mapping="**/*.gif" location="/" />
	<resources mapping="**/*.css" location="/" />
	<resources mapping="**/*.js" location="/" />
	<resources mapping="**/*.ico" location="/" />
	<resources mapping="**/*.swf" location="/" />
	<resources mapping="**/*.txt" location="/" />
	<resources mapping="**/*.html" location="/" />
	<resources mapping="**/*.zip" location="/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/view/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>

	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="defaultEncoding">
			<beans:value>utf-8</beans:value>
		</beans:property>
		<!-- the exception will handled by FileExceedsFileSizeLimitHandler.java -->
		<beans:property name="maxUploadSize">  
 			<beans:value>104857600</beans:value>  
		</beans:property>  
		<beans:property name="maxInMemorySize">  
			<beans:value>4096</beans:value>  
		</beans:property> 	
	</beans:bean>

    <beans:bean class="org.dozer.spring.DozerBeanMapperFactoryBean">
        <beans:property name="mappingFiles" value="WEB-INF/xml/dozer/*mapping.xml"/>
    </beans:bean>

    <beans:bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
        <beans:property name="basenames">
            <beans:list>
             <beans:value>message-source</beans:value>
             <beans:value>error-message</beans:value>
            </beans:list>
        </beans:property>
    </beans:bean>
 
	<!-- for rabbitMq -->
    <beans:bean id="rabbitConnFactory" class="org.springframework.amqp.rabbit.connection.CachingConnectionFactory">
        <beans:constructor-arg>
            <beans:value>mq.pgproxy.com</beans:value>
        </beans:constructor-arg>
        <beans:property name="username" value="pgproxy" />
        <beans:property name="password" value="proxy1234" />
    </beans:bean>

    <beans:bean id="rabbitTemplate" class="org.springframework.amqp.rabbit.core.RabbitTemplate">
        <beans:property name="messageConverter">
            <beans:bean class="org.springframework.amqp.support.converter.JsonMessageConverter">
                <!-- if necessary, override the DefaultClassMapper -->
                <!--<property name="classMapper" ref="customClassMapper"/>-->
            </beans:bean>
        </beans:property>
        <beans:property name="connectionFactory" ref="rabbitConnFactory" />
        <beans:property name="routingKey" value="admin.newaccount"/>
        <beans:property name="queue" value="admin.ui"/>
        <beans:property name="exchange" value="amq.topic"/>
    </beans:bean>

    <beans:bean id="rabbitAdmin" class="org.springframework.amqp.rabbit.core.RabbitAdmin">
        <beans:constructor-arg ref="rabbitConnFactory" />
    </beans:bean>
    

	<!-- for apache activemq -->
<!-- 	
	<beans:bean id="broker" class="org.apache.activemq.xbean.XBeanBrokerService">
		<beans:property name="useJmx" value="false"></beans:property>
		<beans:property name="persistent" value="true"></beans:property>
		<beans:property name="transportConnectors">
			<beans:bean class="org.apache.activemq.broker.TransportConnector">
				<beans:property name="uri" value="tcp://localhost:0" />
			</beans:bean>
		</beans:property>
	</beans:bean>
	<beans:bean id="connectionFactory" class="org.apache.activemq.spring.ActiveMQXAConnectionFactory"  >
		<beans:property name="brokerURL" value="vm://localhost"></beans:property>
	</beans:bean>
 -->	

	<beans:bean id="mqConnectionFactory" class="org.apache.activemq.pool.PooledConnectionFactory" destroy-method="stop">
		<beans:property name="connectionFactory">
			<beans:bean class="org.apache.activemq.ActiveMQConnectionFactory">
				<beans:property name="brokerURL">
					<beans:value>tcp://172.31.41.162:61616</beans:value>
				</beans:property>
			</beans:bean>
		</beans:property>
		<beans:property name="maxConnections" value="1" />
	</beans:bean>

<!-- 
	<beans:bean id="mqConnectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
        <beans:property name="brokerURL">
            <beans:value>tcp://localhost:61616</beans:value>
        </beans:property>
    </beans:bean>
 -->
 
	<beans:bean id="mqCachedConnectionFactory" class="org.springframework.jms.connection.CachingConnectionFactory">
		<beans:property name="targetConnectionFactory" ref="mqConnectionFactory"/>
		<beans:property name="reconnectOnException" value="true" />
		<beans:property name="exceptionListener" ref="mqExceptionListener" />
		<beans:property name="sessionCacheSize">
			<beans:value>10</beans:value>
		</beans:property>
	</beans:bean>

	<beans:bean id="mqExceptionListener" class="com.bizislife.core.service.activemq.JmsExceptionListener">
		<beans:property name="cachingConnectionFactory" ref="mqCachedConnectionFactory" />
	</beans:bean>
	
	<beans:bean id="emailQueue" class="org.apache.activemq.command.ActiveMQQueue">
		<beans:constructor-arg>
			<beans:value>emailQueue</beans:value>
		</beans:constructor-arg>
	</beans:bean>
<!-- 	
	<beans:bean id="topicDestination" class="org.apache.activemq.command.ActiveMQTopic">
		<beans:constructor-arg value="topic1" />
	</beans:bean> 	
 -->	
	
	<beans:bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate">
		<beans:property name="connectionFactory" ref="mqCachedConnectionFactory" />
		<!-- Value = javax.jms.DeliveryMode.PERSISTENT -->
		<beans:property name="deliveryMode" value="2" />
		<!-- Value = javax.jms.Session.CLIENT_ACKNOWLEDGE -->
		<beans:property name="sessionAcknowledgeMode" value="2" />
		<!-- Needs to be true for the deliveryMode to work -->
		<beans:property name="explicitQosEnabled" value="true" />	
	</beans:bean>
	<beans:bean id="testSender" class="com.bizislife.core.service.activemq.test.queue.TestSender">
		<beans:property name="destination" ref="emailQueue"></beans:property>
		<beans:property name="jmsTemplate" ref="jmsTemplate"></beans:property>
	</beans:bean>
	<beans:bean id="queueMsgSender" class="com.bizislife.core.service.activemq.QueueMsgSender">
		<beans:property name="jmsTemplate" ref="jmsTemplate"></beans:property>
	</beans:bean>
		
	<beans:bean id="testReceiver" class="com.bizislife.core.service.activemq.test.queue.TestReceiver">
		<beans:property name="destination" ref="emailQueue"></beans:property>
		<beans:property name="jmsTemplate" ref="jmsTemplate"></beans:property>
	</beans:bean>
<!-- 	
	<beans:bean class="org.springframework.jms.listener.SimpleMessageListenerContainer">
        <beans:property name="connectionFactory" ref="mqCachedConnectionFactory" />
        <beans:property name="destination" ref="emailQueue" />
        <beans:property name="messageListener" ref="testMsgReceiver" />
    </beans:bean>
 -->
	<beans:bean id="jmsTransactionManager" class="org.springframework.jms.connection.JmsTransactionManager">
	    <!-- can also refer to amq.connectionFactory -->
	    <beans:property name="connectionFactory" ref="mqCachedConnectionFactory" />
	</beans:bean>
	<beans:bean id="emailMessageListenerContainer" class="org.springframework.jms.listener.DefaultMessageListenerContainer">
		<beans:property name="concurrentConsumers" value="1" />
        <beans:property name="connectionFactory" ref="mqCachedConnectionFactory" />
        <beans:property name="destination" ref="emailQueue" />
        <beans:property name="messageListener" ref="emailMessageReceiver" />
        <beans:property name="sessionTransacted" value="true" />
        <beans:property name="transactionManager" ref="jmsTransactionManager" />
    </beans:bean>
    
<!-- 
	<beans:bean id="defaultMessageListenerContainer" class="org.springframework.jms.listener.DefaultMessageListenerContainer">
		<beans:property name="concurrentConsumers" value="1" />
        <beans:property name="connectionFactory" ref="mqCachedConnectionFactory" />
        <beans:property name="destination" ref="topicDestination" />
        <beans:property name="messageListener" ref="testTopicMsgReceiver" />
        <beans:property name="sessionTransacted" value="true" />
		<beans:property name="pubSubDomain" value="true" />
		<beans:property name="transactionManager" ref="jmsTransactionManager" />
		
		<beans:property name="subscriptionDurable" value="true" />
     	<beans:property name="clientId" value="myApp" />
     	<beans:property name="durableSubscriptionName" value="myApp" />        
    </beans:bean>
 -->



<!--  	<beans:bean id="wizardData" class="com.study4fun.controller.TestConversationWizard.WizardData" scope="conversation" >
		<aop:scoped-proxy/>
	</beans:bean>
 -->
 
	<beans:bean id="jaxbMarshaller" class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
		<beans:property name="classesToBeBound">
			<beans:list>
				<beans:value>com.bizislife.core.controller.component.LeftNavNode</beans:value>
			</beans:list>
		</beans:property>
	</beans:bean>
 
	<!-- Imports user-defined @Controller beans that process client requests -->
	<beans:import resource="controllers.xml" />

	<beans:import resource="aspect.xml" />
	<beans:import resource="quartz.xml" />
	
	<beans:import resource="mongo.xml"/>
	
	<beans:import resource="restful.xml"/>






</beans:beans>
